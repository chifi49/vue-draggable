{"remainingRequest":"/Users/fisigma/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fisigma/Documents/Amazon Photos Downloads/github-projects/vue-draggable/vue-draggable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fisigma/Documents/Amazon Photos Downloads/github-projects/vue-draggable/vue-draggable.vue","mtime":1605100329000},{"path":"/Users/fisigma/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fisigma/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fisigma/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["vue-draggable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAefile":"vue-draggable.vue","sourceRoot":".","sourcesContent":["<template>\n    <span v-if=\"tag=='span'\">\n        <slot></slot>\n    </span>\n    <li v-else-if=\"tag=='li'\">\n        <slot></slot>\n    </li>\n    <div v-else-if=\"tag=='div'\">\n        <slot></slot>\n    </div>\n    <div v-else-if=\"tag=='tr'\">\n        <slot></slot>\n    </div>\n</template>\n<script>\nimport Vue from 'vue';\nexport default{\n    name:'vue-draggable',\n    props:{\n        tag:{\n            required:false,\n            type:String,\n            default:'span'\n        },\n        zindex:{\n            required:false,\n            type:Number,\n            default:100 //what z-index to set while dragging\n        },\n        axis:{\n            required:false,\n            type:String,\n            default:'xy'\n        },\n        offset:{ //how many pixels to move to count it as dragging\n            required:false,\n            type:Number,\n            default:10\n        },\n        \n        draghandle:{\n            required:false,\n            type:String,\n            default:'' //a selector from the slot or the target\n        },\n        clone:{\n            required:false,\n            type:Boolean,\n            default:false\n        },\n        clone_element:{\n            required:false,\n            type:Function,\n            default:null\n        },\n        clone_opacity:{\n            required:false,\n            type:Number,\n            default:0.5\n        },\n        dropareas:{\n            required:false,\n            type:Array,\n            default:function(){\n                return [];\n            }\n        },\n        dropping_element:{\n            required:false,\n            type:Function,\n            default:function(){\n                var div = document.createElement('div');\n                div.style.cssText = 'height:20px;border:dashed 2px #afafaf';\n                div.classList.add('vue-dropping-ghost');\n                return div;\n            }\n        },\n        drop_ghost:{ //drag but after you drop, return to its first position\n            required:false,\n            type:Boolean,\n            default:false\n        },\n        containment:{\n            required:false,\n            type:String,\n            default:'body'\n        }\n    },\n    data(){\n        return {\n            domElement:null, //which one to drag\n            dragElement:null,\n            cloneElement:null,\n            domHandle:null, //from where to drag\n            droppingElement:null,\n            containmentElement:null,\n            containmentRect:null,\n            original_target:null,\n            orginal_handle:null,\n            isDragging:false,\n            dragStartX:-1,\n            dragStartY:-1,\n            elementX:-1,\n            elemnentY:-1,\n            elementDiffX:0,\n            elementDiffY:0,\n            isDroppable:false, // if we have dropareas than it is a droppable\n            dropped_area:null,//the about to drop area\n            drop_areas:[],\n            cssPosition:''\n        }\n    },\n    methods:{\n        dragStarted(event){\n            event.preventDefault();\n            \n\n            if( (event.which && event.which==3) || (event.button && event.button==2)){//should not detect right clicks as mousedown for dragging\n                return;\n            }\n\n            this.isDroppable = false;\n            this.dropped_area = null;\n\n            this.dragStartX = event.touches && event.touches.length>0?event.touches[0].pageX:event.pageX;\n            this.dragStartY = event.touches && event.touches.length>0?event.touches[0].pageY:event.pageY;\n            this.$vdraggable.current = this;\n\n            var dim = this.dsDom.getBoundingClientRect();\n            this.elementX = dim.left;\n            this.elementY = dim.top;\n            this.elementDiffX = event.pageX - dim.left;\n            this.elementDiffY = event.pageY - dim.top;\n\n            this.containmentRect = this.containmentElement.getBoundingClientRect();\n\n            document.addEventListener('mousemove',this.dragMove)\n            document.addEventListener('touchmove',this.dragMove);\n            document.addEventListener('mouseup',this.dragEnd);\n            document.addEventListener('touchend',this.dragEnd);\n        },\n        dragMove(event){\n            event.preventDefault();\n\n            this.dropped_area = null;\n            \n            var pageX = event.touches && event.touches.length>0?event.touches[0].pageX:event.pageX;\n            var pageY = event.touches && event.touches.length>0?event.touches[0].pageY:event.pageY;\n            var diffX = pageX - this.dragStartX;\n            var diffY = pageY - this.dragStartY;\n            if(this.axis=='xy' && (Math.abs(diffX)>this.offset || Math.abs(diffY)>this.offset ) ){\n                this.isDragging = true;\n            }else if(this.axis=='x' && Math.abs(diffX)>this.offset){\n                this.isDragging = true;\n            }else if(this.axis=='y' && Math.abs(diffY)>this.offset){\n                this.isDragging = true;\n            }\n            if(this.isDragging){\n                if(this.dragElement==null){\n                    //first time we enter here when isDragging became true for first time\n                    \n                    this.getDropAreas();\n                }\n                if(this.clone && this.dragElement==null){\n                    if(this.clone_element!=null){\n                        this.dragElement = this.clone_element({instance:this,el: this.dsDom});\n                    }else{\n                        var dim = this.dsDom.getBoundingClientRect();\n                        this.dragElement = this.dsDom.cloneNode(true);\n                        this.dragElement.style.opacity = this.clone_opacity;\n                        this.dragElement.style.position='absolute';\n                        this.dragElement.style.left = dim.left+'px';\n                        this.dragElement.style.top = dim.top+'px';\n                    }\n                    document.body.appendChild(this.dragElement);\n\n                    this.$emit('drag_started',{instance:this,dragElement: this.dragElement, clone: this.clone})\n                }else if(this.dragElement==null){\n                    this.dragElement = this.dsDom;\n                    this.$emit('drag_started',{instance:this,dragElement: this.dragElement, clone:this.clone})\n                }\n                this.dragElement.style.position='absolute';\n\n                var finalX = pageX - this.elementDiffX;\n                var finalY = pageY - this.elementDiffY;\n\n                //check the containment, if we are inside the bounds of permitted dragging area\n                if(finalX<this.containmentRect.left || finalX+this.dragElement.offsetWidth>this.containmentRect.left+this.containmentRect.width\n            || finalY<this.containmentRect.top || finalY+this.dragElement.offsetHeight>this.containmentRect.top+this.containmentRect.height){\n                return;//do not drag outside containment\n            }\n\n\n                //console.log(diffX, diffY);\n                if(this.axis=='xy' || this.axis=='x'){\n                    this.dragElement.style.left = finalX+'px';\n                }\n                if(this.axis=='xy' || this.axis=='y'){\n                    this.dragElement.style.top = finalY+'px';\n                }\n\n                this.$emit('dragging',{instance:this, dragElement: this.dragElement, clone: this.clone, coords:{x:finalX,y:finalY},nativeEvent: event})\n\n                if(this.isDroppable){\n                    //find in which droppable we are contained\n                    var is_contained = false;\n                    for(var d=0;d<this.drop_areas.length;d++){\n                        var drop_area = this.drop_areas[d];\n                        //console.log(drop_area);\n                        var draggable = {\n                            left: finalX,\n                            top: finalY,\n                            width: this.dragElement.offsetWidth,\n                            height: this.dragElement.offsetHeight\n                        };\n                        \n                        if(this.contains(drop_area,draggable)){ \n                            \n                            is_contained = true;\n                            drop_area.el.classList.add('vue-dropping');\n                            this.dropped_area = drop_area;\n                            //if we have not marked as active drop area, mark it (so we do not send none stop drop enter event)\n                            //also we do not need to recreate the ghost dropping_element again and again, one time is enought\n                            if(!drop_area.active){\n                                drop_area.active = true;\n                                drop_area.createDroppingElement();\n                                this.$emit('drop_enter',{instance:this, dragElement:this.dragElement,clone:this.clone,areaElement: drop_area.el});    \n                                this.drop_areas[d] = drop_area;\n                            }else{\n                                this.$emit('dropping',{instance:this, dragElement:this.dragElement, clone:this.clone, areaElement: drop_area.el});\n                            }\n                        }else{\n                            is_contained = false;\n                            /**\n                            if(drop_area.active){\n                                if(drop_area.dropping_element!=null){\n                                    drop_area.el.removeChild(drop_area.dropping_element);\n                                    drop_area.dropping_element = null;\n                                }\n                                this.$emit('drop_exit',{instance:this, dragElement:this.dragElement, clone:this.clone, areaElement: drop_area.el});\n                                drop_area.active= false;\n                                this.drop_areas[d] = drop_area;\n                            }\n                            drop_area.el.classList.remove('vue-dropping')\n                            **/\n                        }\n\n                    }//for\n                    console.log('contained',is_contained);\n                    //loop through all the drop_areas and any drop_area that is not currently active\n                    //remove its active state and remove also any ghost dropping element\n                    for(var dd=0;dd<this.drop_areas.length;dd++){\n                        if(this.drop_areas[dd]!=this.dropped_area && this.drop_areas[dd].active){\n                            this.drop_areas[dd].el.classList.remove('vue-dropping');\n                            this.drop_areas[dd].active = false;\n                            this.drop_areas[dd].removeDroppingElement();\n                        }\n                    }\n                    \n\n                }//if(this.isDroppable)\n                \n            }//if(this.isDragging)\n        },\n        dragEnd(event){\n            event.preventDefault();\n            \n            /** CHECK IF WE WERE DRAGGING vis isDragging, because might never started */\n            //console.log(event);\n            if(this.isDragging){\n            var drag_element = this.dragElement;\n            if(this.clone && this.isDragging){ //be sure to remove clone element if we indeed dragged\n                document.body.removeChild(this.dragElement);\n                \n            }\n\n            \n            this.dragElement = null;\n            this.dsDom.style.position = 'absolute';\n\n            var pageX = event.touches && event.touches.length>0?event.touches[0].pageX:event.pageX;\n            var pageY = event.touches && event.touches.length>0?event.touches[0].pageY:event.pageY;\n\n            if(this.axis=='xy' || this.axis=='x'){\n                this.dsDom.style.left = pageX - this.elementDiffX+'px';\n            }\n            if(this.axis=='xy' || this.axis=='y'){\n                this.dsDom.style.top = pageY - this.elementDiffY+'px';\n            }\n            if(this.isDroppable && this.dropped_area!=null){\n                this.$emit('dropped',{instance:this,areaElement:this.dropped_area.el,dragElement:drag_element,clone:this.clone})\n                \n                \n                //console.log('dropped too');\n\n\n                //this.dropped_area.el.classList.remove('vue-dropping');\n\n                //remove the dropping_element\n                //this.dropped_area.el.removeChild(this.dropped_area.dropping_element);\n                //if we are acting as a ghost then do not append the element in the droppable area and return it\n                //to its previous position, we are responsible to create the element we want in the dropped area\n                if(!this.drop_ghost){\n                   // alert('done');\n                    this.dropped_area.el.appendChild(this.dsDom);\n                    this.dsDom.style.position = this.cssPosition;\n                }else if(this.drop_ghost){\n                    this.dsDom.style.position = this.cssPosition;\n                }\n            }else if(this.isDroppable){\n                //return to previous position\n                this.dsDom.style.position = this.cssPosition;\n            }\n            }\n            this.isDragging = false;\n            this.isDroppable = false;\n            //this.isDragging = false;\n            this.dropped_area = null;\n            this.$emit('drag_ended');\n            this.resetDropAreas();\n            document.removeEventListener('mousemove',this.dragMove);\n            document.removeEventListener('mouseup',this.dragEnd);\n        },\n        setupEventHandlers(){\n            this.dsDom.addEventListener('mousedown',this.dragStarted)\n            this.dsDom.addEventListener('touchstart',this.dragStarted);\n            this.dsDom.addEventListener('dragstart',(event)=>{\n                event.preventDefault();\n            } )\n        },\n        getId(){\n            var d = new Date();\n            return 'vdraggable-'+d.getMilliseonds();\n        },\n        resetDropAreas(){\n            console.log('resetdropareas');\n            for(var d=0;d<this.drop_areas.length;d++){\n                this.drop_areas[d].el.classList.remove('vue-dropping');\n                this.drop_areas[d].active = false;\n                //ean exo dropping element dimiourgimeno, katestrepse to\n                if(this.drop_areas[d].dropping_element!=null){\n                    this.drop_areas[d].removeDroppingElement();\n                }\n            }\n            this.drop_areas = [];\n        },\n        getDropAreas(){\n            this.isDroppable = false;\n            if(this.dropareas.length==0){\n                return;\n            }\n           var areas = document.querySelectorAll(this.dropareas.join(','));\n           var me = this;\n           [].forEach.call(areas,function(el){\n               var drop = {\n                   el: el,\n                   dim: el.getBoundingClientRect(),\n                   active: false,\n                   dropping_element:null, //holds a reference to dropping element in order to remove it\n                   removeDroppingElement:function(){\n                       if(this.dropping_element!=null){\n                           this.el.removeChild(this.dropping_element);\n                           this.dropping_element = null;\n                       }\n                   },\n                   createDroppingElement:function(){\n                       this.dropping_element = me.dropping_element();\n                       this.el.appendChild(this.dropping_element);\n                   }\n               };\n               me.drop_areas.push(drop);\n           })\n           if(this.drop_areas.length>0){\n               this.isDroppable = true;\n           }\n        },\n        contains(droppable,draggable){\n            var dim = droppable.dim;\n           \n            if(dim.left<draggable.left+(draggable.width/1.5) && dim.left+dim.width>draggable.left+(draggable.width/1.5) \n            && dim.top<draggable.top+(draggable.height/1.5) && dim.top+dim.height>draggable.top+(draggable.height/1.5)){\n                return true;\n            }\n            \n            return false;\n        }\n    },\n    created(){\n        if(typeof this.$vdraggable=='undefined'){\n            Vue.prototype.$vdraggable = Vue.observable({\n                creations:0,\n                instances:0,\n                isDragging:false,\n                current:null\n            })\n        }\n        this.$vdraggable.creations++;\n        this.$vdraggable.instances++;\n    },\n    destroy(){\n        this.$vdraggable.instances--;\n        this.removeEventHandlers();\n    },\n    mounted(){\n        //console.log(this.$slots.default);\n        if(typeof this.$slots.default!=='undefined' && this.$slots.default.length>0){\n            //console.log(this.$slots.default);\n            this.dsDom = this.$el;//this.$slots.default[0].elm;\n        }\n        if(this.draghandle!='' && this.dsDom!=null){\n            this.domHandle = this.dsDom.querySelector(this.draghandle);\n        }\n        if(this.dropareas.length>0){\n            this.isDroppable = true;\n        }\n        \n        this.containmentElement = document.querySelector(this.containment);\n        \n        this.cssPosition = this.dsDom.style.position;\n        console.log('ghost',this.drop_ghost);\n        //console.log(this.dsDom);\n        this.setupEventHandlers();\n    }\n}\n</script>"]}]}